Readme for the input types:

The data sets included are all 2-channel (though of course importing any single channel at a time is also valid, for a 1-channel KERA session).  In each case, channel 1 is a 3-state model, and channel 2 is a 2-state model.  

By looking at the format of each type of file, it should be possible to reformat your existing raw data into one of these types, for import into one of the discretization softwares (more information on each of them can be found from their developers).  If you already have your data discretized, but using a different method than one of the three currently supported, you can try to conform it to one of the existing import types (QuB might be easiest, despite the strange naming conventions).  Or, following instructions in the documentation, you can try to write your own format of import.  MATLAB’s “save” function on an array with the “-ascii” tab is a good way to create text arrays which are like the dat files

For practice loading raw traces into ebFRET, use the traces in the folder labeled “ebFRET input”.  First, open an ebFRET session and load the files from one of the subfolders; run the analysis (with the appropriate number of states—this is changed by altering the “min” and “max” states at the bottom of the ebFRET interface).  Then export the smd.  Then load the traces from the other subfolder in the ebFRET input folder and repeat, getting a second smd.  These smd files should look just like the ones contained in the ebFRET output folder.

For practice loading ebFRET discretized outputs into KERA, open a KERA session and select to import from ebFRET.  To load both smd files, enter 2 channels and 3,2 for the state models (channel 1 is the one with 3 states).  Then select the first channel smd when prompted and similarly select the second channel smd.  

HaMMY similarly has pre-analysis traces (to be loaded into HaMMY, one set at a time, with the proper state model selected) as well as an example of what the traces look like after analysis.  You can practice importing the discretized files into KERA.  The ones that have the extension .path are the ones which KERA actually loads and reads, though for HaMMY import all that you need to do is select the folder in which all the .path files are for a given channel.  

hFRET is still in development by the Gonzalez lab and its outputs have been included as an acceptable filetype on a tentative basis.  hFRET, in the current version, requires all trajectories to be o the same length; the file called 1channel3statehFRETpre-analysis contains 10 traces, as columns, each a simulated 3-state trajectory.   This, when loaded into hFRET and analyzed using 1-dimension, 3-level, 1-static subpopulation model, generated the file called 1channel3statehFRETpost-analysis.  This can be loaded into KERA as a 1 channel data set.  In the HMM parameters, choose to not analyze fractional amplitudes, because the signal is coming from the first channel, not a ratio of two channels.  Although it is still in the works, it is likely that hFRET will produce the most robust and consistent results with respect to an analysis in KERA; the initial results seem promising, anyway.  To solve the problem of making all traces the same length, you can pad the end of all traces with a certain value and add one more state in the hFRET model.  As long as the padding value is far enough from the rest of the data, hFRET will assign all the padding (and only the padding) to that extra state.  This can be done automatically using convertRawFiles, which can read in a batch of .dat, .csv, or .txt files.  It is assumed that one column in each file corresponds to the trace the user would like to extract.  

Finally, QuB files post-discretization are provided; opening these in excel, you can see that each has two columns: the state, and the dwell time (in ms).  Importing this into KERA is easy because, after setting 2 channels and 3,2 states (again, channel 1 is a 3-state model, channel 2 is a 2-state model), simply select the folder where all the QuB files are grouped together, and the naming conventions do the rest of the work of sorting and pairing.

The normalization data is meant for import to the script normalizeTrajectorySet; open the included variables in MATLAB, then set the variable “importOldSession” within the script to 1.  Running the script will allow the user to go through the trace viewing/selection process.  This is a two-channel data set.  In the current form, some of the traces have been “accepted” and some have been rejected.  


